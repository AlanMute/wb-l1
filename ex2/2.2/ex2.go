package main

import (
	"fmt"
	"sync"
)

func main() {
	fmt.Println("Задача 2.2")

	arr := [5]int{2, 4, 6, 8, 10}

	// Для того чтобы горутина выполняющую main функцию не завершилась пока существуют другие активные горутины можно использовать wait group
	var w sync.WaitGroup
	w.Add(5)

	for _, i := range arr {
		go func(a int) {
			fmt.Println(a * a)
			w.Done()
		}(i) // Здесь если не передавать аргумент, то функции будут ссылаться на последний аргумент (так как цикл дойдет последнего значения раньше чем горутины)
	}

	w.Wait()
}
